// Code generated by MockGen. DO NOT EDIT.
// Source: controller.go

// Package mock_account is a generated GoMock package.
package mock_account

import (
	gin "github.com/gin-gonic/gin"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockIAccountController is a mock of IAccountController interface
type MockIAccountController struct {
	ctrl     *gomock.Controller
	recorder *MockIAccountControllerMockRecorder
}

// MockIAccountControllerMockRecorder is the mock recorder for MockIAccountController
type MockIAccountControllerMockRecorder struct {
	mock *MockIAccountController
}

// NewMockIAccountController creates a new mock instance
func NewMockIAccountController(ctrl *gomock.Controller) *MockIAccountController {
	mock := &MockIAccountController{ctrl: ctrl}
	mock.recorder = &MockIAccountControllerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockIAccountController) EXPECT() *MockIAccountControllerMockRecorder {
	return m.recorder
}

// NewAccount mocks base method
func (m *MockIAccountController) NewAccount(c *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "NewAccount", c)
}

// NewAccount indicates an expected call of NewAccount
func (mr *MockIAccountControllerMockRecorder) NewAccount(c interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewAccount", reflect.TypeOf((*MockIAccountController)(nil).NewAccount), c)
}

// FindByID mocks base method
func (m *MockIAccountController) FindByID(id string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "FindByID", id)
}

// FindByID indicates an expected call of FindByID
func (mr *MockIAccountControllerMockRecorder) FindByID(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindByID", reflect.TypeOf((*MockIAccountController)(nil).FindByID), id)
}
